%*************************************************************************
% The source code contained herein was developed for Embry-Riddle 
% Aeronautical University by Glenn P. Greiner, Professor and Jafar 
% Mohammed, Student Assistant of the Aerospace Engineering Department, 
% Daytona Beach Campus. Copyright 2008. All rights reserved.

% Although due care has been taken to present accurate programs this 
% software is provided "as is" WITHOUT WARRANTY OF ANY KIND, EITHER 
% EXPRESSED OR IMPLIED, AND EXPLICITLY EXCLUDING ANY IMPLIED WARRANTIES 
% OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE. The entire risk as 
% to the quality and performance of the software is with the user. The 
% program is made available only for education and personal research. It 
% may not be sold to other parties. If you copy some or all of the 
% software you are requested to return a copy of any source additions that
% you believe make a significant improvement in its range of application.
%*************************************************************************
%*************************************************************************
% MATLAB Plot Routines for DATCOM (GUI)
% Created by: Jafar Mohammed
% Version Date: Oct 19, 2008
%
% Inputs DATCOM output and plots stability and control data
%
% Limitations: Throws error if NaN's appear in for013.dat file
%              
%*************************************************************************
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%The following three function statements are generated by MATLAB.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function varargout = plotdatgui(varargin)
% PLOTDATGUI M-file for plotdatgui.fig

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @plotdatgui_OpeningFcn, ...
                   'gui_OutputFcn',  @plotdatgui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before plotdatgui is made visible.
function plotdatgui_OpeningFcn(hObject, eventdata, handles, varargin)
handles.output = hObject;
guidata(hObject, handles);

% Clear the workspace
    clear
    clear global
    %clc
% The following commands disable the checkboxes at GUI initialization    
    set(findobj('Tag','figure1'), 'Name', 'Plot DATCOM v2.1');
    objectsOff();
    set(findobj('Tag','stabBody'), 'Enable', 'off');
    set(findobj('Tag','stabWing'), 'Enable', 'off');
    set(findobj('Tag','stabHTail'), 'Enable', 'off');
    set(findobj('Tag','stabWB'), 'Enable', 'off');
    set(findobj('Tag','stabAC'), 'Enable', 'off');
    set(findobj('Tag','Print'), 'Enable', 'off');
    set(findobj('Tag','altSelection'), 'Enable', 'off')
    set(findobj('Tag','machSelection'), 'Enable', 'off')
    set(findobj('Tag','AOASelection'), 'Enable', 'off')
    set(findobj('Tag','deltaSelection'), 'Enable', 'off')
    set(findobj('Tag','mnuGroup1'),'Enable','off')
    set(findobj('Tag','mnuGroup2'),'Enable','off')
    set(findobj('Tag','mnuGroup3'),'Enable','off')
    set(findobj('Tag','mnuGroup4'),'Enable','off')
    set(findobj('Tag','mnuGroup5'),'Enable','off')
    set(findobj('Tag','mnuGroup6'),'Enable','off')
    set(findobj('Tag','mnuGroup7'),'Enable','off')
    set(findobj('Tag','mnuPlots'),'Enable','off')
    set(findobj('Tag','ssbutton'),'Visible','off')

    global num
    num=0;
% --- Outputs from this function are returned to the command line.
function varargout = plotdatgui_OutputFcn(hObject, eventdata, handles) 
varargout{1} = handles.output;

% ---------------------------------------------------------------------
%%
function File_Callback(hObject, eventdata, handles)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Exit function called when user selects File > Exit
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Exit_Callback(hObject, eventdata, handles)
    clear
    clear global
    clc
    close
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Open function prompts the user to select the DATCOM for013.dat
% file.  The file path is saved; the checkboxes are enabled.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Open_Callback(hObject, eventdata, handles)
    clear
    clear global
    %clc
    cla reset
    objectsOff();
    
    % Load the filename into variable 'filename'
    [filename, pathname] = uigetfile({'*.dat','Datcom Plot File (*.dat)'}, 'Load DATCOM Plot .dat file...');

    % If the file exists, load the file data into structs
    % and enable the user interface
    % else, the file was not loaded.
    if (filename ~= 0)
        theFile = strcat(pathname,filename);
        set(findobj('Tag','checkBody'),'Value', 0)
        set(findobj('Tag','checkWing'),'Value', 0)
        set(findobj('Tag','checkHT'),'Value', 0)
        set(findobj('Tag','checkVT'),'Value', 0)
        set(findobj('Tag','checkVF'),'Value', 0)
        set(findobj('Tag','checkWB'),'Value', 0)
        set(findobj('Tag','checkBHT'),'Value', 0)
        set(findobj('Tag','checkBVT'),'Value', 0)
        set(findobj('Tag','checkWBHT'),'Value', 0)
        set(findobj('Tag','checkWBVT'),'Value', 0)
        set(findobj('Tag','checkWBVTHT'),'Value', 0)
        set(findobj('Tag','altSelection'), 'Enable', 'on')
        set(findobj('Tag','AOASelection'), 'Enable', 'on')
        %set(findobj('Tag','stabBody'), 'Enable', 'on');
        %set(findobj('Tag','stabWing'), 'Enable', 'on');
        %set(findobj('Tag','stabHTail'), 'Enable', 'on');
        %set(findobj('Tag','stabWB'), 'Enable', 'on');
        %set(findobj('Tag','stabAC'), 'Enable', 'on');
        set(findobj('Tag','Print'), 'Enable', 'on');
        set(findobj('Tag','mnuGroup1'),'Enable','on')
        set(findobj('Tag','mnuGroup2'),'Enable','on')
        %set(findobj('Tag','mnuGroup3'),'Enable','on')
        loadDAT(theFile)
    else
        errordlg('File not loaded.','File Error');
        objectsOff();
        set(findobj('Tag','machSelection'), 'Enable', 'off')
        set(findobj('Tag','altSelection'), 'Enable', 'off')
        set(findobj('Tag','AOASelection'), 'Enable', 'off')
        set(findobj('Tag','deltaSelection'), 'Enable', 'off')
        %set(findobj('Tag','vsAOA'), 'Enable', 'off')
        %set(findobj('Tag','vsMach'), 'Enable', 'off')
        %set(findobj('Tag','vsOther'), 'Enable', 'off')
        set(findobj('Tag','stabBody'), 'Enable', 'off');
        set(findobj('Tag','stabWing'), 'Enable', 'off');
        set(findobj('Tag','stabHTail'), 'Enable', 'off');
        set(findobj('Tag','stabWB'), 'Enable', 'off');
        set(findobj('Tag','stabAC'), 'Enable', 'off');
        set(findobj('Tag','Print'), 'Enable', 'off');
        set(findobj('Tag','mnuGroup1'),'Enable','off')
        set(findobj('Tag','mnuGroup2'),'Enable','off')
        set(findobj('Tag','mnuGroup3'),'Enable','off')
        set(findobj('Tag','mnuGroup4'),'Enable','off')
        set(findobj('Tag','mnuGroup5'),'Enable','off')
        set(findobj('Tag','mnuGroup6'),'Enable','off')
        set(findobj('Tag','mnuGroup7'),'Enable','off')
        set(findobj('Tag','mnuPlots'),'Enable','off')
    end
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Print function called when user selects File > Export
% Another figure window pops up where the user can copy
% or print the figure.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Print_Callback(hObject, eventdata, handles)
    global MACH ALT ALSCHD NALPHA LOOP NMACH GROUP SELECTION
    global BODY WING HTAIL VTAIL VFIN WB BHT BVT WBHT WBVT WBVTHT
    
    % Obtain values from dropdown boxes
    m = get(findobj('Tag','machSelection'), 'Value');
    h = get(findobj('Tag','altSelection'), 'Value');
    a = get(findobj('Tag','AOASelection'), 'Value');
    
    % Create the new exported plot figure
    fig=figure('Name', 'DATCOM Plot',...
               'Units', 'normalized',...
               'Position', [0.2 0.2 .6 .6],...
               'Resize', 'on',...
               'PaperPositionMode','auto');
    % Add axes to the figure and plot what the user selected
    % to the new axes
    axes
    plotDatcom()
    
    % Display annotations on the exported plot according to what
    % plot the user selected
    switch GROUP
        case 1
            % Display cdo values on the plot
            str = {sprintf('Mach = %.3f',MACH(m)),sprintf('Alt = %d feet',ALT(h))};
            if SELECTION == 1  %CD v AOA
                if LOOP >= 1
                    i=3;
                    if get(findobj('Tag','checkBody'), 'Value') == 1
                        str{i} = sprintf('Body Cdo = %.3f',BODY(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWing'), 'Value') == 1
                        str{i} = sprintf('Wing Cdo = %.3f',WING(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkHT'), 'Value') == 1
                        str{i} = sprintf('HT Cdo = %.3f',HTAIL(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkVT'), 'Value') == 1
                        str{i} = sprintf('VT Cdo = %.3f',VTAIL(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkVF'), 'Value') == 1
                        str{i} = sprintf('VF Cdo = %.3f',VFIN(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWB'), 'Value') == 1
                        str{i} = sprintf('WB Cdo = %.3f',WB(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkBHT'), 'Value') == 1
                        str{i} = sprintf('BH Cdo = %.3f',BHT(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkBVT'), 'Value') == 1
                        str{i} = sprintf('BV Cdo = %.3f',BVT(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBHT'), 'Value') == 1
                        str{i} = sprintf('WBH Cdo = %.3f',WBHT(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBVT'), 'Value') == 1
                        str{i} = sprintf('WBV Cdo = %.3f',WBVT(m,h).CDO);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBVTHT'), 'Value') == 1
                        str{i} = sprintf('WBHV Cdo = %.3f',WBVTHT(m,h).CDO);
                        i=i+1;
                    end
                end
            elseif SELECTION == 2  %CL v AOA
                if ((LOOP >= 1) && (ALSCHD(1)<=0))
                    i=3;
                    if get(findobj('Tag','checkBody'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, BODY(m,h).CL);
                        str{i} = sprintf('Body C_L_0 = %.3f',CL_y0);
                        %text(0,CL_y0,str{i});  %Place text on graph
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWing'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, WING(m,h).CL);
                        str{i} = sprintf('Wing C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkHT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, HTAIL(m,h).CL);
                        str{i} = sprintf('HT C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkVT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, VTAIL(m,h).CL);
                        str{i} = sprintf('VT C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkVF'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, VFIN(m,h).CL);
                        str{i} = sprintf('VF C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWB'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, WB(m,h).CL);
                        str{i} = sprintf('WB C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkBHT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, BHT(m,h).CL);
                        str{i} = sprintf('BH C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkBVT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, BVT(m,h).CL);
                        str{i} = sprintf('BV C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBHT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, WBHT(m,h).CL);
                        str{i} = sprintf('WBH C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBVT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, WBVT(m,h).CL);
                        str{i} = sprintf('WBV C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBVTHT'), 'Value') == 1
                        CL_y0 = interpCoef(NALPHA, ALSCHD, WBVTHT(m,h).CL);
                        str{i} = sprintf('WBHV C_L_0 = %.3f',CL_y0);
                        i=i+1;
                    end
                end
            elseif SELECTION == 3  %Cm v AOA
                if ((LOOP >= 1) && (ALSCHD(1)<=0))
                    i=3;
                    if get(findobj('Tag','checkBody'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, BODY(m,h).CM);
                        str{i} = sprintf('Body C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWing'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, WING(m,h).CM);
                        str{i} = sprintf('Wing C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkHT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, HTAIL(m,h).CM);
                        str{i} = sprintf('HT C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkVT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, VTAIL(m,h).CM);
                        str{i} = sprintf('VT C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkVF'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, VFIN(m,h).CM);
                        str{i} = sprintf('VF C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWB'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, WB(m,h).CM);
                        str{i} = sprintf('WB C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkBHT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, BHT(m,h).CM);
                        str{i} = sprintf('BH C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkBVT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, BVT(m,h).CM);
                        str{i} = sprintf('BV C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBHT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, WBHT(m,h).CM);
                        str{i} = sprintf('WBH C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBVT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, WBVT(m,h).CM);
                        str{i} = sprintf('WBV C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                    if get(findobj('Tag','checkWBVTHT'), 'Value') == 1
                        Cm_y0 = interpCoef(NALPHA, ALSCHD, WBVTHT(m,h).CM);
                        str{i} = sprintf('WBHV C_m_0 = %.3f',Cm_y0);
                        i=i+1;
                    end
                end
            end
            axis([ALSCHD(1) ALSCHD(NALPHA) -inf inf])
        case 2
            str = {sprintf('Mach = %.3f',MACH(m)),sprintf('Alt = %d feet',ALT(h))};   
        case 3
            str = {sprintf('Mach = %.3f',MACH(m)),sprintf('Alt = %d feet',ALT(h))};  
            axis([ALSCHD(1) ALSCHD(NALPHA) -inf inf])
        case 4
            str = {sprintf('AOA = %.1f deg',ALSCHD(a)),sprintf('Alt = %d feet',ALT(h))};
            axis([MACH(1) MACH(NMACH) -inf inf])
        case 5
            if SELECTION == 8
                str = {sprintf('Mach = %.3f',MACH(m)),sprintf('Alt = %d feet',ALT(h))};  
            else
                s = sprintf('     Mach = %.3f                   Altitude = %d feet',...
                MACH(m),ALT(h));
            end
        case 6
            if SELECTION == 3
                str = {sprintf('Mach = %.3f',MACH(m)),sprintf('Alt = %d feet',ALT(h))};  
            else
                s = sprintf('     Mach = %.3f                   Altitude = %d feet',...
                MACH(m),ALT(h));
            end
        case 7
            s = sprintf('     Mach = %.3f                   Altitude = %d feet',...
            MACH(m),ALT(h));
    end
    
    % Add legend and position the annotations
    if (GROUP < 5) || ((GROUP == 6) && (SELECTION == 3)) || (GROUP == 5) && (SELECTION == 8)
        legend(gca, 'Location','NorthEastOutside');
        lpos = get(findobj('Tag','legend'), 'Position');
        ttext = annotation(fig,'textbox',...
          'Position',[lpos{1}(1) .5 lpos{1}(3) 0],...
          'LineStyle','none',...
          'FitHeightToText','on',...
          'HorizontalAlignment','left',...
          'String',str);
        tpos = get(ttext,'Position');
        set(ttext,'Position',[lpos{1}(1) lpos{1}(2)-tpos(4) lpos{1}(3) tpos(4)]);    
    else
        annotation(fig,'textbox',...
      'Position',[0.1359 0.005587 0.7739 0.04888],...
      'LineStyle','none',...
      'FitHeightToText','off',...
      'HorizontalAlignment','center',...
      'String',s);       
    end
    

    %set(text,'Position',[.785 lpos{1}(2)-tpos(4) lpos{1}(3) tpos(4)]);
% ---------------------------------------------------------------------
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Finds value of CL and CM when AOA = 0
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function val = interpCoef(nAOAs, AOAs, Coefs)
    ind = 0;
    for i=1:nAOAs
        if AOAs(i) == 0
            ind=i;
        end
    end
    
    if ind > 0
        val = Coefs(ind);
    else
        x1 = find(AOAs>0);
        x1 = x1(1);
        x0 = x1-1;
        
        y1 = Coefs(x1);
        y0 = Coefs(x0);
        x1 = AOAs(x1);
        x0 = AOAs(x0);

        val = (0-x0)/((x1-x0)/(y1-y0))+y0;
    end
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Following three function execute when mach or altitude dropdown
% menu is changed.  Plotting routine is called
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function machSelection_Callback(hObject, eventdata, handles)
    plotDatcom()    %Plotting routine
function altSelection_Callback(hObject, eventdata, handles)
    plotDatcom()    %Plotting routine
function AOASelection_Callback(hObject, eventdata, handles)
    plotDatcom()    %Plotting routine
% ---------------------------------------------------------------------
%%

%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Following three functions are automatically created by MATLAB.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function machSelection_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
function altSelection_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
function AOASelection_CreateFcn(hObject, eventdata, handles)
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
%%
%%
% ---------------------------------------------------------------------

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Following functions are executed when user selects checkboxes or option
% boxes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% --- Executes on button press in checkBody.
function checkBody_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkWing.
function checkWing_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkHT.
function checkHT_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkVT.
function checkVT_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkVF.
function checkVF_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkWB.
function checkWB_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkBHT.
function checkBHT_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkBVT.
function checkBVT_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkWBHT.
function checkWBHT_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkWBVT.
function checkWBVT_Callback(hObject, eventdata, handles)
    plotDatcom()
% --- Executes on button press in checkWBVTHT.
function checkWBVTHT_Callback(hObject, eventdata, handles)
    plotDatcom()
% ---------------------------------------------------------------------
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Function loads data from for013.dat file into program
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
function loadDAT(theFile)
    %Global variables
    global GROUP SELECTION
    global NMACH NALPHA NALT MACH ALSCHD LOOP ALT OPTAVAIL
    global BODY WING HTAIL VTAIL VFIN WB BHT BVT WBHT WBVT WBVTHT
    global NDELTA DELTA DCDI DCL DCM DCLMAX DCDMIN CLAD CHA CHD
    global CLROLL ASYCN
    global DTT DCLT DCLMAXT DCDIT DCDMINT CHDT
    
    %Open the file
    fid = fopen(theFile, 'r');
    
    % Read in Flight Condition Input Variables, data block "FLC" (160 values)
    [FLC,cFLC] = fscanf(fid, '%12e', 160);
    
    % If no data is read in, then there is a problem with the file
    % i.e. incorrect file or format
    if (cFLC == 0)
        errordlg({'Wrong File or','for013.dat file is empty or corrupted'},'File Error');
    end

    % Read in Synthesis Parameters, data block "SYNA" (15+4+4 values)
    % Extra 4 values are Reference Dimensional Data
    [SYNA,cSYNA] = fscanf(fid, '%12e', 30);

    % Read in Logical Variables (34 values)
    [LOGVAR,cLOGVAR] = fscanf(fid, '%s', 34);

    % Parse out useful variables from input arrays
    NMACH    = FLC(1);         %# of Machs
    NALPHA   = FLC(2);         %# of AOAs
    NGH      = FLC(63);        
    STMACH   = FLC(94);        
    TSMACH   = FLC(95);
    TR       = FLC(96);
    WT       = FLC(157);
    GAMMA    = FLC(158);
    NALT     = FLC(159);       %# of Alts
    LOOP     = FLC(160);       %Loop Number
    MACH     = [];             %Mach numbers
    ALSCHD   = [];             %Angles of Attacks
    RNNUB    = [];
    GRDHT    = [];
    PINF     = [];
    ALT      = [];             %Altitudes
    TINF     = [];
    VINF     = [];

    for i=1:10;    GRDHT(i) = FLC(i+63); end
    for i=1:NMACH; MACH(i)  = FLC(i+2); end
    for i=1:NALT;  ALT(i)   = FLC(i+96); end

    for i=1:NALPHA; 
        ALSCHD(i) = FLC(i+22);
        RNNUB(i)  = FLC(i+42);
        PINF(i)   = FLC(i+73);
        TINF(i)   = FLC(i+116);
        VINF(i)   = FLC(i+136);
    end

    XCG    = SYNA(1);
    XW     = SYNA(2);
    ZW     = SYNA(3);
    ALIW   = SYNA(4);
    ZCG    = SYNA(5);
    XH     = SYNA(6);
    ZH     = SYNA(7);
    ALIH   = SYNA(8);
    XV     = SYNA(9);
    SREF   = SYNA(20);
    CBARR  = SYNA(21);
    ROUGFC = SYNA(22);
    BLREF  = SYNA(23);  
    
    %Logical Flags
    hasBODY   = LOGVAR(3);
    hasWING   = LOGVAR(4);
    hasHTAIL  = LOGVAR(7);
    hasVTAIL  = LOGVAR(9); 
    hasVFIN   = LOGVAR(31);
    BUILD     = LOGVAR(27);
    hasSYMFLP = LOGVAR(20);
    hasASYFLP = LOGVAR(21);
    hasTRIM   = LOGVAR(22);
    
    if (strcmp(hasSYMFLP,'T') == 1) || (strcmp(hasASYFLP,'T') == 1) || (strcmp(hasTRIM,'T') == 1)
        values = 3209;
    else
        values = 2311;
    end
    
    % Determine how many IOM values *should* be read in
    if LOOP == 1
        numVals = NMACH*values;
    else
        numVals = NMACH*NALT*values;
    end
    
    % Read in Aerodynamic Data of specified amount
    [IOM, cIOM] = fscanf(fid, '%12e', numVals);
    
    % Read in Control Data (898 values)
    %[CTRL, cCTRL] = fscanf(fid, '%12e', 898);
    
    % Close the file
    fclose(fid);
   
    OPTAVAIL = [hasBODY hasWING hasHTAIL hasVTAIL hasVFIN BUILD];

    %%%%%%%%%%%%Control (Version 2.0 Addition - Vol I pg 207)%%%%%%%%%%%
    set(findobj('Tag','mnuPlots'),'Enable','on')
    if (strcmp(hasSYMFLP,'T') == 1)
        DELTA = [];        %Array of DELTA's
        
        NDELTA = IOM(2311+16); %Number of DELTA's (deflections)
        NDCDI = NALPHA*NDELTA;
        
        for i=1:NDELTA 
             DELTA(i) = IOM(i+2311);
        end

        set(findobj('Tag','mnuGroup5'),'Enable','on')
        set(findobj('Tag','mnuGroup6'),'Enable','off')
        set(findobj('Tag','deltaSelection'),'String',DELTA)
    elseif (strcmp(hasASYFLP,'T') == 1)
        DELTA = [];        %Array of DELTA's
        
        NDELTA = IOM(2311+16); %Number of DELTA's (deflections)
        NCN = NALPHA*NDELTA;
        
        for i=1:NDELTA 
             DELTA(i) = IOM(i+2311+538);
        end

        set(findobj('Tag','mnuGroup6'),'Enable','on')
        set(findobj('Tag','mnuGroup5'),'Enable','off')
        set(findobj('Tag','deltaSelection'),'String',DELTA)
    else
        set(findobj('Tag','mnuPlots'),'Enable','off')
        set(findobj('Tag','mnuGroup5'),'Enable','off')
        set(findobj('Tag','mnuGroup6'),'Enable','off')
    end
    
    if (strcmp(hasTRIM,'T') == 1)
        set(findobj('Tag','mnuGroup7'),'Enable','on')
    else
        set(findobj('Tag','mnuGroup7'),'Enable','off')
    end
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % Create structs for aerodynamic data
    % LOOP=1: Mach and Alt vary together
    % LOOP=2: Mach varies with Alt
    % LOOP=3: Alt varies with Mach
    if LOOP == 1
        temp1=1;
        temp2=NALT;
        % Determine if NaN's were present in the file
        % Determined if # of values read in < # vals should have been read
        % in
        if (NMACH*values ~= cIOM)
            errordlg('NaN error in for013.dat file.','NaN Error');
        end
        set(findobj('Tag','machSelection'), 'Enable', 'off');
    elseif LOOP == 2
        temp1=NALT;
        temp2=NMACH;
        if (NMACH*NALT*values ~= cIOM)
            errordlg('NaN error in for013.dat file.','NaN Error');
        end
        set(findobj('Tag','machSelection'), 'Enable', 'on');
    else
        temp1=NMACH;
        temp2=NALT;
        if (NMACH*NALT*values ~= cIOM)
            errordlg('NaN error in for013.dat file.','NaN Error'); 
        end
        set(findobj('Tag','machSelection'), 'Enable', 'on');
    end
    
    % Corrections for LOOP = 2 or 3
    % LOOP = 1 place values along matrix diagonals
    for j=1:temp1
        for k=1:temp2
            if LOOP == 1
                mult = (j-1)*values*NALT + (k-1)*values;
                m=k;
                a=k;
            elseif LOOP == 2
                mult = (j-1)*values*NMACH + (k-1)*values;
                m=k;
                a=j;
            else
                mult = (j-1)*values*NALT + (k-1)*values;
                m=j;
                a=k;
            end
            
            % Distribute values from IOM into structs
            % for quick usage
            for i=1:NALPHA;
                BODY(m,a).CD(i) = IOM(mult+i);
                BODY(m,a).CL(i) = IOM(mult+i+20);
                BODY(m,a).CM(i) = IOM(mult+i+40);
                BODY(m,a).CN(i) = IOM(mult+i+60);
                BODY(m,a).CA(i) = IOM(mult+i+80);
                BODY(m,a).CLA(i) = IOM(mult+i+100);
                BODY(m,a).CMA(i) = IOM(mult+i+120);
                BODY(m,a).CYB(i) = IOM(mult+i+140);
                BODY(m,a).CNB(i) = IOM(mult+i+160);
                BODY(m,a).CLB(i) = IOM(mult+i+180);

                WING(m,a).CD(i) = IOM(mult+i+200);
                WING(m,a).CL(i) = IOM(mult+i+220);
                WING(m,a).CM(i) = IOM(mult+i+240);
                WING(m,a).CN(i) = IOM(mult+i+260);
                WING(m,a).CA(i) = IOM(mult+i+280);
                WING(m,a).CLA(i) = IOM(mult+i+300);
                WING(m,a).CMA(i) = IOM(mult+i+320);
                WING(m,a).CYB(i) = IOM(mult+i+340);
                WING(m,a).CNB(i) = IOM(mult+i+360);
                WING(m,a).CLB(i) = IOM(mult+i+380);

                HTAIL(m,a).CD(i) = IOM(mult+i+400);
                HTAIL(m,a).CL(i) = IOM(mult+i+420);
                HTAIL(m,a).CM(i) = IOM(mult+i+440);
                HTAIL(m,a).CN(i) = IOM(mult+i+460);
                HTAIL(m,a).CA(i) = IOM(mult+i+480);
                HTAIL(m,a).CLA(i) = IOM(mult+i+500);
                HTAIL(m,a).CMA(i) = IOM(mult+i+520);
                HTAIL(m,a).CYB(i) = IOM(mult+i+540);
                HTAIL(m,a).CNB(i) = IOM(mult+i+560);
                HTAIL(m,a).CLB(i) = IOM(mult+i+580);

                VTAIL(m,a).CD(i) = IOM(mult+i+600);
                VTAIL(m,a).CL(i) = IOM(mult+i+620);
                VTAIL(m,a).CM(i) = IOM(mult+i+640);
                VTAIL(m,a).CN(i) = IOM(mult+i+660);
                VTAIL(m,a).CA(i) = IOM(mult+i+680);
                VTAIL(m,a).CLA(i) = IOM(mult+i+700);
                VTAIL(m,a).CMA(i) = IOM(mult+i+720);
                VTAIL(m,a).CYB(i) = IOM(mult+i+740);
                VTAIL(m,a).CNB(i) = IOM(mult+i+760);
                VTAIL(m,a).CLB(i) = IOM(mult+i+780);

                VFIN(m,a).CD(i) = IOM(mult+i+800);
                VFIN(m,a).CL(i) = IOM(mult+i+820);
                VFIN(m,a).CM(i) = IOM(mult+i+840);
                VFIN(m,a).CN(i) = IOM(mult+i+860);
                VFIN(m,a).CA(i) = IOM(mult+i+880);
                VFIN(m,a).CLA(i) = IOM(mult+i+900);
                VFIN(m,a).CMA(i) = IOM(mult+i+920);
                VFIN(m,a).CYB(i) = IOM(mult+i+940);
                VFIN(m,a).CNB(i) = IOM(mult+i+960);
                VFIN(m,a).CLB(i) = IOM(mult+i+980); 

                WB(m,a).CD(i) = IOM(mult+i+1000);
                WB(m,a).CL(i) = IOM(mult+i+1020);
                WB(m,a).CM(i) = IOM(mult+i+1040);
                WB(m,a).CN(i) = IOM(mult+i+1060);
                WB(m,a).CA(i) = IOM(mult+i+1080);
                WB(m,a).CLA(i) = IOM(mult+i+1100);
                WB(m,a).CMA(i) = IOM(mult+i+1120);
                WB(m,a).CYB(i) = IOM(mult+i+1140);
                WB(m,a).CNB(i) = IOM(mult+i+1160);
                WB(m,a).CLB(i) = IOM(mult+i+1180); 

                BHT(m,a).CD(i) = IOM(mult+i+1200);
                BHT(m,a).CL(i) = IOM(mult+i+1220);
                BHT(m,a).CM(i) = IOM(mult+i+1240);
                BHT(m,a).CN(i) = IOM(mult+i+1260);
                BHT(m,a).CA(i) = IOM(mult+i+1280);
                BHT(m,a).CLA(i) = IOM(mult+i+1300);
                BHT(m,a).CMA(i) = IOM(mult+i+1320);
                BHT(m,a).CYB(i) = IOM(mult+i+1340);
                BHT(m,a).CNB(i) = IOM(mult+i+1360);
                BHT(m,a).CLB(i) = IOM(mult+i+1380); 

                BVT(m,a).CD(i) = IOM(mult+i+1400);
                BVT(m,a).CL(i) = IOM(mult+i+1420);
                BVT(m,a).CM(i) = IOM(mult+i+1440);
                BVT(m,a).CN(i) = IOM(mult+i+1460);
                BVT(m,a).CA(i) = IOM(mult+i+1480);
                BVT(m,a).CLA(i) = IOM(mult+i+1500);
                BVT(m,a).CMA(i) = IOM(mult+i+1520);
                BVT(m,a).CYB(i) = IOM(mult+i+1540);
                BVT(m,a).CNB(i) = IOM(mult+i+1560);
                BVT(m,a).CLB(i) = IOM(mult+i+1580); 

                WBHT(m,a).CD(i) = IOM(mult+i+1600);
                WBHT(m,a).CL(i) = IOM(mult+i+1620);
                WBHT(m,a).CM(i) = IOM(mult+i+1640);
                WBHT(m,a).CN(i) = IOM(mult+i+1660);
                WBHT(m,a).CA(i) = IOM(mult+i+1680);
                WBHT(m,a).CLA(i) = IOM(mult+i+1700);
                WBHT(m,a).CMA(i) = IOM(mult+i+1720);
                WBHT(m,a).CYB(i) = IOM(mult+i+1740);
                WBHT(m,a).CNB(i) = IOM(mult+i+1760);
                WBHT(m,a).CLB(i) = IOM(mult+i+1780); 

                WBVT(m,a).CD(i) = IOM(mult+i+1800);
                WBVT(m,a).CL(i) = IOM(mult+i+1820);
                WBVT(m,a).CM(i) = IOM(mult+i+1840);
                WBVT(m,a).CN(i) = IOM(mult+i+1860);
                WBVT(m,a).CA(i) = IOM(mult+i+1880);
                WBVT(m,a).CLA(i) = IOM(mult+i+1900);
                WBVT(m,a).CMA(i) = IOM(mult+i+1920);
                WBVT(m,a).CYB(i) = IOM(mult+i+1940);
                WBVT(m,a).CNB(i) = IOM(mult+i+960);
                WBVT(m,a).CLB(i) = IOM(mult+i+1980); 

                WBVTHT(m,a).CD(i) = IOM(mult+i+2000);
                WBVTHT(m,a).CL(i) = IOM(mult+i+2020);
                WBVTHT(m,a).CM(i) = IOM(mult+i+2040);
                WBVTHT(m,a).CN(i) = IOM(mult+i+2060);
                WBVTHT(m,a).CA(i) = IOM(mult+i+2080);
                WBVTHT(m,a).CLA(i) = IOM(mult+i+2100);
                WBVTHT(m,a).CMA(i) = IOM(mult+i+2120);
                WBVTHT(m,a).CYB(i) = IOM(mult+i+2140);
                WBVTHT(m,a).CNB(i) = IOM(mult+i+2160);
                WBVTHT(m,a).CLB(i) = IOM(mult+i+2180); 
                
                WBVTHT(m,a).Q_QINF(i) = IOM(mult+i+2200); 
                WBVTHT(m,a).EPSILON(i) = IOM(mult+i+2220); 
                WBVTHT(m,a).DE_DA(i) = IOM(mult+i+2240); 
                
                %CYB and CNB only for first alpha
                %Set other alphas to first alpha
                if i>1
                    BODY(m,a).CYB(i)   = BODY(m,a).CYB(1);
                    BODY(m,a).CNB(i)   = BODY(m,a).CNB(1);
                    WING(m,a).CYB(i)   = WING(m,a).CYB(1);
                    WING(m,a).CNB(i)   = WING(m,a).CNB(1);
                    HTAIL(m,a).CYB(i)  = HTAIL(m,a).CYB(1);
                    HTAIL(m,a).CNB(i)  = HTAIL(m,a).CNB(1);
                    VTAIL(m,a).CYB(i)  = VTAIL(m,a).CYB(1);
                    VTAIL(m,a).CNB(i)  = VTAIL(m,a).CNB(1);
                    VFIN(m,a).CYB(i)   = VFIN(m,a).CYB(1);
                    VFIN(m,a).CNB(i)   = VFIN(m,a).CNB(1);
                    WB(m,a).CYB(i)     = WB(m,a).CYB(1);
                    WB(m,a).CNB(i)     = WB(m,a).CNB(1);
                    BHT(m,a).CYB(i)    = BHT(m,a).CYB(1);
                    BHT(m,a).CNB(i)    = BHT(m,a).CNB(1);
                    BVT(m,a).CYB(i)    = BVT(m,a).CYB(1);
                    BVT(m,a).CNB(i)    = BVT(m,a).CNB(1);
                    WBHT(m,a).CYB(i)   = WBHT(m,a).CYB(1);
                    WBHT(m,a).CNB(i)   = WBHT(m,a).CNB(1);
                    WBVT(m,a).CYB(i)   = WBVT(m,a).CYB(1);
                    WBVT(m,a).CNB(i)   = WBVT(m,a).CNB(1);
                    WBVTHT(m,a).CYB(i) = WBVTHT(m,a).CYB(1) ;
                    WBVTHT(m,a).CNB(i) = WBVTHT(m,a).CNB(1);                    
                end
            end
             % Parse Cdo data
            BODY(m,a).CDO = IOM(mult+1+2300);
            WING(m,a).CDO = IOM(mult+2+2300);
            HTAIL(m,a).CDO = IOM(mult+3+2300);
            VTAIL(m,a).CDO = IOM(mult+4+2300);
            VFIN(m,a).CDO = IOM(mult+5+2300);
            WB(m,a).CDO = IOM(mult+6+2300);                       
            BHT(m,a).CDO = IOM(mult+7+2300);
            BVT(m,a).CDO = IOM(mult+8+2300);                        
            WBHT(m,a).CDO = IOM(mult+9+2300);
            WBVT(m,a).CDO = IOM(mult+10+2300);    
            WBVTHT(m,a).CDO = IOM(mult+11+2300);    
            
            if (strcmp(hasSYMFLP,'T') == 1)
                for i=1:NDCDI; delCDI(i) = IOM(mult+i+138+2311); end
                for i=1:NDELTA 
                    WBVTHT(m,a).DCL(i) = IOM(mult+i+338+2311);
                    WBVTHT(m,a).DCM(i) = IOM(mult+i+348+2311);
                    WBVTHT(m,a).DCLMAX(i) = IOM(mult+i+358+2311);
                    WBVTHT(m,a).DCDMIN(i) = IOM(mult+i+368+2311);
                    WBVTHT(m,a).CLAD(i) = IOM(mult+i+378+2311);
                    WBVTHT(m,a).CHA(i) = IOM(mult+i+388+2311);
                    WBVTHT(m,a).CHD(i) = IOM(mult+i+398+2311);
                    for u=1:NALPHA
                        WBVTHT(m,a).DCDI(i,u) = delCDI((i-1)*NALPHA + u);
                    end
                end
            elseif (strcmp(hasASYFLP,'T') == 1)
                for i=1:NCN; delCN(i) = IOM(mult+i+138+2311); end
                for i=1:NDELTA 
                    WBVTHT(m,a).CLROLL(i) = IOM(mult+i+548+2311);
                    for u=1:NALPHA
                        WBVTHT(m,a).ASYCN(i,u) = delCN((i-1)*NALPHA + u);
                    end
                end
            end
            if (strcmp(hasTRIM,'T') == 1)
                for i=1:NALPHA
                    WBVTHT(m,a).DTT(i) = IOM(mult+i+718+2311);
                    WBVTHT(m,a).DCLT(i) = IOM(mult+i+738+2311);
                    WBVTHT(m,a).DCLMAXT(i) = IOM(mult+i+758+2311);
                    WBVTHT(m,a).DCDIT(i) = IOM(mult+i+778+2311);
                    WBVTHT(m,a).DCDMINT(i) = IOM(mult+i+798+2311);
                    WBVTHT(m,a).CHDT(i) = IOM(mult+i+838+2311);
                end
            end
        end
    end
    
    % Since data is now available, can release
    % user to select items from menus
    clearChecks();
    GROUP = 1;
    SELECTION = 1;
    set(findobj('Tag','mnuPG1N1'),'Checked','on');
    populateMenus();
% ---------------------------------------------------------------------

function populateMenus()
	global NMACH NALPHA NALT MACH ALSCHD LOOP ALT
    
    %Place mach and alts in respective drop down GUI elements
	set(findobj('Tag','machSelection'),'String',MACH)
	set(findobj('Tag','altSelection'),'String',ALT)
    set(findobj('Tag','AOASelection'),'String',ALSCHD)
    
    plotMenuChange()
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Plotting routine
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
function plotDatcom()
    %Global variables referenced above
    global GROUP SELECTION
    global NMACH NALPHA NALT MACH ALSCHD LOOP ALT
    global BODY WING HTAIL VTAIL VFIN WB BHT BVT WBHT WBVT WBVTHT
    global NDELTA DELTA DCDI DCL DCM DCLMAX DCDMIN CLAD CHA CHD
    global CLROLL ASYCN
    global DTT DCLT DCLMAXT DCDIT DCDMINT CHDT
    
    %Reset axes and revert back to inital form
    cla reset
    hold on
    grid(gca,'on');
    box(gca,'on');
    set(gca,'LineWidth',1.5);
       
    AOASel = get(findobj('Tag','AOASelection'), 'Value');
    
    % Restricts data for LOOP = 1
    % Create matrices for vsMach data
    if LOOP ~= 1
        machSel = get(findobj('Tag','machSelection'), 'Value');
        altSel = get(findobj('Tag','altSelection'), 'Value');
        for i=1:NMACH
            %CDM(i) = WBVTHT(i,altSel).CD(AOASel);
            CDM(i) = WBVTHT(i,altSel).CDO;
            CLM(i) = WBVTHT(i,altSel).CL(AOASel);
            CMM(i) = WBVTHT(i,altSel).CM(AOASel);
            CNM(i) = WBVTHT(i,altSel).CN(AOASel);
            CAM(i) = WBVTHT(i,altSel).CA(AOASel);
            CLAM(i) = WBVTHT(i,altSel).CLA(AOASel);
            CMAM(i) = WBVTHT(i,altSel).CMA(AOASel);
            CYBM(i) = WBVTHT(i,altSel).CYB(AOASel);
            CNBM(i) = WBVTHT(i,altSel).CNB(AOASel);
            CLBM(i) = WBVTHT(i,altSel).CLB(AOASel);
            Q_QINFM(i) = WBVTHT(i,altSel).Q_QINF(AOASel);
            EPSILONM(i) = WBVTHT(i,altSel).EPSILON(AOASel);
            DE_DAM(i) = WBVTHT(i,altSel).DE_DA(AOASel);
        end
    else
        altSel = get(findobj('Tag','altSelection'), 'Value');
        set(findobj('Tag','machSelection'), 'Value', altSel);
        machSel = get(findobj('Tag','machSelection'), 'Value'); 
    end
    
    deltaSel = get(findobj('Tag','deltaSelection'), 'Value');
    
    plotExists = 0;
    %*** PLOTTING ROUTINE
    
    switch GROUP
        case 1 %Vs AOA
            switch SELECTION
                case 1 %CD vs AOA
                    title(gca,'C_D vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_D');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CD);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CD);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CD);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CD);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CD);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CD);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CD);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CD);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CD);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CD);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CD);      
                        plotExists=1;
                    end  
                case 2 % CL vs AOA
                    title(gca,'C_L vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_L');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CL);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CL);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CL);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CL);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CL);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CL);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CL);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CL);      
                        plotExists=1;
                    end  
                case 3 %CM vs AOA
                    title(gca,'C_m vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_m');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CM);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CM);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CM);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CM);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CM);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CM);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CM);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CM);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CM);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CM);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CM);      
                        plotExists=1;
                    end    
                case 4 %CN vs AOA
                    title(gca,'C_N vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_N');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CN);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CN);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CN);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CN);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CN);      
                        plotExists=1;
                    end             
                case 5 %CA vs AOA
                    title(gca,'C_A vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_A');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CA);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CA);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CA);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CA);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CA);      
                        plotExists=1;
                    end             
                case 6 %CLA vs AOA
                    title(gca,'C_L_\alpha vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_L_\alpha (1/deg)');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CLA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CLA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CLA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CLA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CLA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CLA);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CLA);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CLA);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CLA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CLA);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CLA);      
                        plotExists=1;
                    end            
                case 7 %CMA vs AOA
                    title(gca,'C_m_\alpha vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_m_\alpha (1/deg)');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CMA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CMA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CMA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CMA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CMA);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CMA);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CMA);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CMA);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CMA);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CMA);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CMA);      
                        plotExists=1;
                    end         
                case 8 %CYB vs AOA
                    title(gca,'C_Y_\beta vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_Y_\beta (1/deg)');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CYB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CYB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CYB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CYB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CYB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CYB);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CYB);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CYB);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CYB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CYB);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CYB);      
                        plotExists=1;
                    end             
                case 9 %CNB vs AOA
                    title(gca,'C_n_\beta vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_n_\beta (1/deg)');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CNB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CNB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CNB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CNB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CNB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CNB);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CNB);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CNB);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CNB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CNB);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CNB);      
                        plotExists=1;
                    end           
                case 10 %CLB vs AOA
                    title(gca,'C_l_\beta vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_l_\beta (1/deg)');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(ALSCHD,BODY(machSel,altSel).CLB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(ALSCHD,WING(machSel,altSel).CLB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(ALSCHD,HTAIL(machSel,altSel).CLB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(ALSCHD,VTAIL(machSel,altSel).CLB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(ALSCHD,VFIN(machSel,altSel).CLB);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(ALSCHD,WB(machSel,altSel).CLB);            
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(ALSCHD,BHT(machSel,altSel).CLB);        
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(ALSCHD,BVT(machSel,altSel).CLB);    
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(ALSCHD,WBHT(machSel,altSel).CLB);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(ALSCHD,WBVT(machSel,altSel).CLB);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).CLB);      
                        plotExists=1;
                    end  
            end
        case 2 %Vs Other
            switch SELECTION
                case 1 %CM vs CL
                    title(gca,'C_m vs. C_L', 'FontSize', 14);
                    xlabel(gca,'C_L');
                    ylabel(gca,'C_m');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(BODY(machSel,altSel).CL,BODY(machSel,altSel).CM);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(WING(machSel,altSel).CL,WING(machSel,altSel).CM); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(HTAIL(machSel,altSel).CL,HTAIL(machSel,altSel).CM);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(VTAIL(machSel,altSel).CL,VTAIL(machSel,altSel).CM);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(VFIN(machSel,altSel).CL,VFIN(machSel,altSel).CM); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(WB(machSel,altSel).CL,WB(machSel,altSel).CM);     
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(BHT(machSel,altSel).CL,BHT(machSel,altSel).CM);       
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(BVT(machSel,altSel).CL,BVT(machSel,altSel).CM); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(WBHT(machSel,altSel).CL,WBHT(machSel,altSel).CM);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(WBVT(machSel,altSel).CL,WBVT(machSel,altSel).CM); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(WBVTHT(machSel,altSel).CL,WBVTHT(machSel,altSel).CM);
                        plotExists=1;
                    end            
                case 2 %CL vs CD
                    title(gca,'C_L vs. C_D', 'FontSize', 14);
                    xlabel(gca,'C_D');
                    ylabel(gca,'C_L');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(BODY(machSel,altSel).CD,BODY(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(WING(machSel,altSel).CD,WING(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(HTAIL(machSel,altSel).CD,HTAIL(machSel,altSel).CL); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(VTAIL(machSel,altSel).CD,VTAIL(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(VFIN(machSel,altSel).CD,VFIN(machSel,altSel).CL); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(WB(machSel,altSel).CD,WB(machSel,altSel).CL);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(BHT(machSel,altSel).CD,BHT(machSel,altSel).CL);      
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(BVT(machSel,altSel).CD,BVT(machSel,altSel).CL); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(WBHT(machSel,altSel).CD,WBHT(machSel,altSel).CL); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(WBVT(machSel,altSel).CD,WBVT(machSel,altSel).CL);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(WBVTHT(machSel,altSel).CD,WBVTHT(machSel,altSel).CL);
                        plotExists=1;
                    end            
                case 3 %CN vs CA
                    title(gca,'C_N vs. C_A', 'FontSize', 14);
                    xlabel(gca,'C_A');
                    ylabel(gca,'C_N');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(BODY(machSel,altSel).CA,BODY(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(WING(machSel,altSel).CA,WING(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(HTAIL(machSel,altSel).CA,HTAIL(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(VTAIL(machSel,altSel).CA,VTAIL(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(VFIN(machSel,altSel).CA,VFIN(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(WB(machSel,altSel).CA,WB(machSel,altSel).CN);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(BHT(machSel,altSel).CA,BHT(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(BVT(machSel,altSel).CA,BVT(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(WBHT(machSel,altSel).CA,WBHT(machSel,altSel).CN); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(WBVT(machSel,altSel).CA,WBVT(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(WBVTHT(machSel,altSel).CA,WBVTHT(machSel,altSel).CN);
                        plotExists=1;
                    end            
                case 4 %CN vs CM
                    title(gca,'C_N vs. C_m', 'FontSize', 14);
                    xlabel(gca,'C_m');
                    ylabel(gca,'C_N');

                    if (get(findobj('Tag','checkBody'), 'Value') == 1)
                        plotBody(BODY(machSel,altSel).CM,BODY(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWing'), 'Value') == 1)
                        plotWing(WING(machSel,altSel).CM,WING(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkHT'), 'Value') == 1)
                        plotHT(HTAIL(machSel,altSel).CM,HTAIL(machSel,altSel).CN); 
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVT'), 'Value') == 1)
                        plotVT(VTAIL(machSel,altSel).CM,VTAIL(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkVF'), 'Value') == 1)
                        plotVF(VFIN(machSel,altSel).CM,VFIN(machSel,altSel).CN);
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWB'), 'Value') == 1)
                        plotWB(WB(machSel,altSel).CM,WB(machSel,altSel).CN);     
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBHT'), 'Value') == 1)
                        plotBHT(BHT(machSel,altSel).CM,BHT(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkBVT'), 'Value') == 1)
                        plotBVT(BVT(machSel,altSel).CM,BVT(machSel,altSel).CN);   
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBHT'), 'Value') == 1)
                        plotWBHT(WBHT(machSel,altSel).CM,WBHT(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVT'), 'Value') == 1)
                        plotWBVT(WBVT(machSel,altSel).CM,WBVT(machSel,altSel).CN);  
                        plotExists=1;
                    end
                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(WBVTHT(machSel,altSel).CM,WBVTHT(machSel,altSel).CN);    
                        plotExists=1;
                    end       
            end
        case 3
            switch SELECTION
                case 1 %Q/QINF vs AOA (only for aircraft)
                    title(gca,'Q/QINF vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'Q/QINF');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).Q_QINF); 
                        plotExists=1;
                    end  
                case 2 %Downwash angle vs AOA (only for aircraft)
                    title(gca,'\epsilon vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\epsilon (deg)');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).EPSILON);
                        plotExists=1;
                    end  
                case 3 %Downwash gradient vs AOA (only for aircraft)
                    title(gca,'d\epsilon/d\alpha vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'d\epsilon/d\alpha');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(ALSCHD,WBVTHT(machSel,altSel).DE_DA);      
                        plotExists=1;
                    end
            end
        case 4 %Vs Mach (data only available for aircraft)
            switch SELECTION
                case 1 %CDO vs M
                    title(gca,'C_D_O vs. Mach', 'FontSize', 14);
                    xlabel(gca,'Mach');
                    ylabel(gca,'C_D_O');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(MACH,CDM);
                        plotExists=1;
                    end
                %case 2 %CL vs M
                %    title(gca,'C_L vs. Mach', 'FontSize', 14);
                %    xlabel(gca,'Mach');
                %    ylabel(gca,'C_L');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,CLM);
                %        plotExists=1;
                %    end
                %case 3 %CM vs M
                %    title(gca,'C_m vs. Mach', 'FontSize', 14);
                %    xlabel(gca,'Mach');
                %    ylabel(gca,'C_m');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,CMM);
                %        plotExists=1;
                %    end
                %case 4 %CN vs M
                %    title(gca,'C_N vs. Mach', 'FontSize', 14);
                %    xlabel(gca,'Mach');
                %    ylabel(gca,'C_N');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,CNM);
                %        plotExists=1;
                %    end
                %case 5 %CA vs M
                %    title(gca,'C_A vs. Mach', 'FontSize', 14);
                %    xlabel(gca,'Mach');
                %    ylabel(gca,'C_A');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,CAM);
                %        plotExists=1;
                %    end
                case 2 %CLA vs M
                    title(gca,'C_L_\alpha vs. Mach', 'FontSize', 14);
                    xlabel(gca,'Mach');
                    ylabel(gca,'C_L_\alpha (1/deg)');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(MACH,CLAM);
                        plotExists=1;
                    end
                case 3 %CMA vs M
                    title(gca,'C_m_\alpha vs. Mach', 'FontSize', 14);
                    xlabel(gca,'Mach');
                    ylabel(gca,'C_m_\alpha (1/deg)');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(MACH,CMAM);
                        plotExists=1;
                    end
                case 4 %CYB vs M
                    title(gca,'C_Y_\beta vs. Mach', 'FontSize', 14);
                    xlabel(gca,'Mach');
                    ylabel(gca,'C_Y_\beta (1/deg)');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(MACH,CYBM);
                        plotExists=1;
                    end
                case 5 %CNB vs M
                    title(gca,'C_N_\beta vs. Mach', 'FontSize', 14);
                    xlabel(gca,'Mach');
                    ylabel(gca,'C_N_\beta (1/deg)');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(MACH,CNBM);
                        plotExists=1;
                    end
                case 6 %CLB vs M
                    title(gca,'C_L_\beta vs. Mach', 'FontSize', 14);
                    xlabel(gca,'Mach');
                    ylabel(gca,'C_L_\beta (1/deg)');

                    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                        plotWBVTHT(MACH,CLBM);
                        plotExists=1;
                    end
                %case 11 %Q/QINF vs M
                %    title(gca,'Q/QINF vs. Mach', 'FontSize', 14);
                %    xlabel(gca,'Mach');
                %    ylabel(gca,'Q/QINF');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,Q_QINFM);
                %        plotExists=1;
                %    end
                %case 12 %Downwash angle vs M
                %    title(gca,'\epsilon vs. Mach', 'FontSize', 14);
                %    xlabel(gca,'Mach');
                %    ylabel(gca,'\epsilon (deg)');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,EPSILONM);
                %        plotExists=1;
                %    end
                %case 13 %Downwash grad vs M
                %    title(gca,'d\epsilon/d\alpha vs. Mach', 'FontSize', 14);
                %   xlabel(gca,'Mach');
                %   ylabel(gca,'d\epsilon/d\alpha');

                %    if (get(findobj('Tag','checkWBVTHT'), 'Value') == 1)
                %        plotWBVTHT(MACH,DE_DAM);
                %        plotExists=1;
                %    end
            end
        case 5
            switch SELECTION
                case 1
                    title(gca,'\DeltaC_L vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'\DeltaC_L');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).DCL, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 2
                    title(gca,'\DeltaC_m vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'\DeltaC_m');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).DCM, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 3
                    title(gca,'\DeltaC_L_m_a_x vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'\DeltaC_L_m_a_x');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).DCLMAX, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 4
                    title(gca,'\DeltaC_D_m_i_n vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'\DeltaC_D_m_i_n');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).DCDMIN, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 5
                    title(gca,'(C_L_\alpha)_\delta vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'(C_L_\alpha)_\delta');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).CLAD, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 6
                    title(gca,'C_h_\alpha vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'C_h_\alpha');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).CHA, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 7
                    title(gca,'C_h_\delta vs. \delta', 'FontSize', 14);
                    xlabel(gca,'\delta (deg)');
                    ylabel(gca,'C_h_\delta');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).CHD, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 8
                    title(gca,'\DeltaC_D_i vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\DeltaC_D_i');
                    tleg = sprintf('delta = %.1f',DELTA(deltaSel));
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).DCDI(deltaSel,:), 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0],...
                        'DisplayName', tleg);
                    plotExists=1;
            end
        case 6
            switch SELECTION
                case 3
                    title(gca,'C_n vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_n');
                    tleg = sprintf('delta = %.1f',DELTA(deltaSel));
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).ASYCN(deltaSel,:), 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0],...
                        'DisplayName', tleg);
                    plotExists=1;
                case 4
                    title(gca,'C_l vs. (\delta_L-\delta_R)', 'FontSize', 14);
                    xlabel(gca,'(\delta_L-\delta_R) (deg)');
                    ylabel(gca,'C_l');
                    
                    set(plot(DELTA,WBVTHT(machSel,altSel).CLROLL, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
            end
        case 7
            switch SELECTION
                case 1
                    title(gca,'\delta_t vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\delta_t (deg)');
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).DTT, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 2
                    title(gca,'\DeltaC_L vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\DeltaC_L');
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).DCLT, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 3
                    title(gca,'\DeltaC_L_m_a_x vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\DeltaC_L_m_a_x');
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).DCLMAXT, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 4
                    title(gca,'\DeltaC_D_i vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\DeltaC_D_i');
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).DCDIT, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 5
                    title(gca,'\DeltaC_D_m_i_n vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'\DeltaC_D_m_i_n');
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).DCDMINT, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;
                case 6
                    title(gca,'C_h_\delta vs. \alpha', 'FontSize', 14);
                    xlabel(gca,'\alpha (deg)');
                    ylabel(gca,'C_h_\delta');
                    
                    set(plot(ALSCHD,WBVTHT(machSel,altSel).CHDT, 'ks-')  ,...
                        'LineWidth',2,'MarkerFaceColor',[0 0 0]);
                    plotExists=1;                
            end
    end
    
    if (plotExists > 0)
        %Apply a legend to the plot
        if (GROUP < 5) || ((GROUP == 6) && (SELECTION == 3)) || (GROUP == 5) && (SELECTION == 8)
            legend(gca, 'Location','NorthWest')
        end 
        set(findobj('Tag','Print'), 'Enable', 'on');
    else
        set(findobj('Tag','Print'), 'Enable', 'off');
    end
    
    %Clear the command window (in case legend throws exception)
    %clc
    hold off  
%--------------------------------------------------------------------------
function plotMenuChange()
    global GROUP SELECTION
    global LOOP OPTAVAIL

    objectsOff();
    if strcmp(OPTAVAIL(1),'T') == 1
        set(findobj('Tag','checkBody'),'Enable','on')
        set(findobj('Tag','stabBody'), 'Enable', 'on');
    end
    if strcmp(OPTAVAIL(2),'T') == 1
        set(findobj('Tag','checkWing'),'Enable','on')
        set(findobj('Tag','stabWing'), 'Enable', 'on');
    end
    if strcmp(OPTAVAIL(3),'T') == 1
        set(findobj('Tag','checkHT'),'Enable','on')
        set(findobj('Tag','stabHTail'), 'Enable', 'on');
    end
    if strcmp(OPTAVAIL(4),'T') == 1
        set(findobj('Tag','checkVT'),'Enable','on')
    end 
    if strcmp(OPTAVAIL(5),'T') == 1
        set(findobj('Tag','checkVF'),'Enable','on') 
    end
    if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(2),'T') == 1)
        set(findobj('Tag','checkWB'),'Enable','on')
        set(findobj('Tag','stabWB'), 'Enable', 'on');
    end
    if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(3),'T') == 1)
        set(findobj('Tag','checkBHT'),'Enable','on')
    end
    if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(4),'T') == 1)
        set(findobj('Tag','checkBVT'),'Enable','on')
    end
    if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(2),'T') == 1) && (strcmp(OPTAVAIL(3),'T') == 1)
        set(findobj('Tag','checkWBHT'),'Enable','on')
    end
    if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(2),'T') == 1) && (strcmp(OPTAVAIL(4),'T') == 1)
        set(findobj('Tag','checkWBVT'),'Enable','on')
    end
    if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(2),'T') == 1) && (strcmp(OPTAVAIL(3),'T') == 1) && (strcmp(OPTAVAIL(4),'T') == 1)
        set(findobj('Tag','checkWBVTHT'),'Enable','on')
        set(findobj('Tag','mnuGroup4'),'Enable','on')
        set(findobj('Tag','mnuGroup3'),'Enable','on')
        set(findobj('Tag','stabAC'), 'Enable', 'on');
    else
        set(findobj('Tag','mnuGroup3'),'Enable','off')
        set(findobj('Tag','mnuGroup4'),'Enable','off')
    end
    
    
    if LOOP==1
        set(findobj('Tag','machSelection'),'Enable','off')
        set(findobj('Tag','mnuGroup4'),'Enable','off')
    else
        set(findobj('Tag','machSelection'),'Enable','on')
        %set(findobj('Tag','mnuGroup4'),'Enable','on')
    end
    
    set(findobj('Tag','deltaSelection'), 'Enable', 'off')
    switch GROUP
        case 1
            set(findobj('Tag','AOASelection'),'Enable','off')
            set(findobj('Tag','altSelection'),'Enable','on')
        case 2
            set(findobj('Tag','AOASelection'),'Enable','off')
            set(findobj('Tag','altSelection'),'Enable','on')
        case 3
            objectsOff();
            if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(2),'T') == 1) && (strcmp(OPTAVAIL(3),'T') == 1) && (strcmp(OPTAVAIL(4),'T') == 1)
                set(findobj('Tag','checkWBVTHT'),'Enable','on')
            end
            set(findobj('Tag','AOASelection'),'Enable','off')   
            set(findobj('Tag','altSelection'),'Enable','on')
        case 4
            objectsOff();
            if (strcmp(OPTAVAIL(1),'T') == 1) && (strcmp(OPTAVAIL(2),'T') == 1) && (strcmp(OPTAVAIL(3),'T') == 1) && (strcmp(OPTAVAIL(4),'T') == 1)
                set(findobj('Tag','checkWBVTHT'),'Enable','on')
            end
            set(findobj('Tag','machSelection'),'Enable','off')
            set(findobj('Tag','AOASelection'),'Enable','on')
            if (SELECTION == 1) || (SELECTION == 4) || (SELECTION == 5)
                set(findobj('Tag','AOASelection'),'Enable','off')
            end
            set(findobj('Tag','altSelection'),'Enable','on')
        case 5
            objectsOff();
            %set(findobj('Tag','machSelection'),'Enable','off')
            set(findobj('Tag','AOASelection'),'Enable','off')
            %set(findobj('Tag','altSelection'),'Enable','off')
            if SELECTION == 8
                set(findobj('Tag','deltaSelection'), 'Enable', 'on')
            end
        case 6
            objectsOff();
            %set(findobj('Tag','machSelection'),'Enable','off')
            set(findobj('Tag','AOASelection'),'Enable','off')
            %set(findobj('Tag','altSelection'),'Enable','off')
            if SELECTION == 3
                set(findobj('Tag','deltaSelection'), 'Enable', 'on')
            end
        case 7
            objectsOff();
            %set(findobj('Tag','machSelection'),'Enable','off')
            set(findobj('Tag','AOASelection'),'Enable','off')
            %set(findobj('Tag','altSelection'),'Enable','off')
    end
    plotDatcom()    %Plotting routine
    
%--------------------------------------------------------------------------
% The following set of functions plot the components on the axes
% Input: What is being plotted (i.e. CD vs AOA)
% Output: Plot on axes

function plotBody(x,y)
    set(plot(x,y, 'ko--'),...
        'LineWidth',2,'MarkerFaceColor',[0 0 0],...                     
        'DisplayName', 'Body') 
function plotWing(x,y)
    set(plot(x,y, 'b*--'),...
        'LineWidth',2,'MarkerFaceColor',[0 0 0],...                     
        'DisplayName', 'Wing') 
function plotHT(x,y)
    set(plot(x,y, 'm+--'),...
        'LineWidth',2,'MarkerFaceColor',[0 0 0],...                     
        'DisplayName', 'HT') 
function plotVT(x,y)
    set(plot(x,y, 'cx--'),...
        'LineWidth',2,'MarkerFaceColor',[0 0 0],...                     
        'DisplayName', 'VT') 
function plotVF(x,y)
    set(plot(x,y, 'y.--'),...
        'LineWidth',2,'MarkerFaceColor',[0 0 0],...                     
        'DisplayName', 'VF') 
function plotWB(x,y)
    set(plot(x,y, 'ks-')  ,...
        'LineWidth',2,'MarkerFaceColor',[0 0 0],...                     
        'DisplayName', 'WB') 
function plotBHT(x,y)
    set(plot(x,y, 'g<-'),...
        'LineWidth',2,'MarkerFaceColor',[0 1 0],...                     
        'DisplayName', 'BH')
function plotBVT(x,y)
    set(plot(x,y, 'g>-'),...
        'LineWidth',2,'MarkerFaceColor',[1 1 0],...                     
        'DisplayName', 'BV') 
function plotWBHT(x,y)
    set(plot(x,y, 'rv-'),...
        'LineWidth',2,'MarkerFaceColor',[1 0 0],...                     
        'DisplayName', 'WBH')  
function plotWBVT(x,y)
    set(plot(x,y, 'r^-'),...
        'LineWidth',2,'MarkerFaceColor',[1 1 1],...                     
        'DisplayName', 'WBV')  
function plotWBVTHT(x,y)
    set(plot(x,y, 'bd-'),...
        'LineWidth',2,'MarkerFaceColor',[0 0 1],...               
        'DisplayName', 'WBHV')
    
%--------------------------------------------------------------------------
% Turns off all the check boxes
function objectsOff()
    set(findobj('Tag','checkBody'),'Enable','off')
    set(findobj('Tag','checkWing'),'Enable','off')
    set(findobj('Tag','checkHT'),'Enable','off')
    set(findobj('Tag','checkVT'),'Enable','off')
    set(findobj('Tag','checkVF'),'Enable','off')
    set(findobj('Tag','checkWB'),'Enable','off')
    set(findobj('Tag','checkBHT'),'Enable','off')
    set(findobj('Tag','checkBVT'),'Enable','off')
    set(findobj('Tag','checkWBHT'),'Enable','off')
    set(findobj('Tag','checkWBVT'),'Enable','off')
    set(findobj('Tag','checkWBVTHT'),'Enable','off')


%THE FOLLOWING FUNCTIONS DISPLAY STABILITY DATA VIA MENU
% --------------------------------------------------------------------
function stabMenu_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function stabBody_Callback(hObject, eventdata, handles)
    global NALPHA ALSCHD MACH ALT
    global BODY

    m = get(findobj('Tag','machSelection'), 'Value');
    h = get(findobj('Tag','altSelection'), 'Value');
    
    namez=sprintf('Body Stability Data at M=%.3f, H=%d ft.',MACH(m),ALT(h));
    
	fig = figure('renderer','zbuffer', 'Name', namez,...
                 'MenuBar', 'none');
    pos = get(fig, 'position');
    pos(3) = 440;pos(4)=160;
    set(fig,'position',pos);
    
	tbl = axes('units', 'pixels','position', [20 20 400 120]);
    for i=1:NALPHA
        cell_data(i,1) = {ALSCHD(i)};
        cell_data(i,2) = {BODY(m,h).CD(i)};
        cell_data(i,3) = {BODY(m,h).CL(i)};
        cell_data(i,4) = {BODY(m,h).CM(i)};
        cell_data(i,5) = {BODY(m,h).CLA(i)};
        cell_data(i,6) = {BODY(m,h).CMA(i)};
        cell_data(i,7) = {BODY(m,h).CNB(i)};
        cell_data(i,8) = {BODY(m,h).CLB(i)};
    end
	columninfo.titles={'AOA','CD','CL','CM','CLA','CMA','CNB','CLB'};
	columninfo.formats = {'%2.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g'};
	columninfo.weight =      [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.multipliers = [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.isEditable =  [ 0, 0, 0, 0, 0, 0, 0, 0];
	columninfo.isNumeric =   [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.withCheck = false;
	columninfo.chkLabel = 'Use';
	rowHeight = 14;
	gFont.size=8;
	gFont.name='Helvetica';
	
	data = mltable(fig, tbl, 'CreateTable', columninfo, rowHeight, cell_data, gFont);

% --------------------------------------------------------------------
function stabWing_Callback(hObject, eventdata, handles)
    global NALPHA ALSCHD MACH ALT
    global WING

    m = get(findobj('Tag','machSelection'), 'Value');
    h = get(findobj('Tag','altSelection'), 'Value');
    
    namez=sprintf('Wing Stability Data at M=%.3f, H=%d ft.',MACH(m),ALT(h));
    
	fig = figure('renderer','zbuffer', 'Name', namez,...
                 'MenuBar', 'none');
    pos = get(fig, 'position');
    pos(3) = 440;pos(4)=160;
    set(fig,'position',pos);
    
	tbl = axes('units', 'pixels','position', [20 20 400 120]);
    for i=1:NALPHA
        cell_data(i,1) = {ALSCHD(i)};
        cell_data(i,2) = {WING(m,h).CD(i)};
        cell_data(i,3) = {WING(m,h).CL(i)};
        cell_data(i,4) = {WING(m,h).CM(i)};
        cell_data(i,5) = {WING(m,h).CLA(i)};
        cell_data(i,6) = {WING(m,h).CMA(i)};
        cell_data(i,7) = {WING(m,h).CNB(i)};
        cell_data(i,8) = {WING(m,h).CLB(i)};
    end
	columninfo.titles={'AOA','CD','CL','CM','CLA','CMA','CNB','CLB'};
	columninfo.formats = {'%2.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g'};
	columninfo.weight =      [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.multipliers = [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.isEditable =  [ 0, 0, 0, 0, 0, 0, 0, 0];
	columninfo.isNumeric =   [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.withCheck = false;
	columninfo.chkLabel = 'Use';
	rowHeight = 14;
	gFont.size=8;
	gFont.name='Helvetica';
	
	data = mltable(fig, tbl, 'CreateTable', columninfo, rowHeight, cell_data, gFont);

% --------------------------------------------------------------------
function stabHTail_Callback(hObject, eventdata, handles)
    global NALPHA ALSCHD MACH ALT
    global HTAIL

    m = get(findobj('Tag','machSelection'), 'Value');
    h = get(findobj('Tag','altSelection'), 'Value');
    
    namez=sprintf('HTail Stability Data at M=%.3f, H=%d ft.',MACH(m),ALT(h));
    
	fig = figure('renderer','zbuffer', 'Name', namez,...
                 'MenuBar', 'none');
    pos = get(fig, 'position');
    pos(3) = 440;pos(4)=160;
    set(fig,'position',pos);
    
	tbl = axes('units', 'pixels','position', [20 20 400 120]);
    for i=1:NALPHA
        cell_data(i,1) = {ALSCHD(i)};
        cell_data(i,2) = {HTAIL(m,h).CD(i)};
        cell_data(i,3) = {HTAIL(m,h).CL(i)};
        cell_data(i,4) = {HTAIL(m,h).CM(i)};
        cell_data(i,5) = {HTAIL(m,h).CLA(i)};
        cell_data(i,6) = {HTAIL(m,h).CMA(i)};
        cell_data(i,7) = {HTAIL(m,h).CNB(i)};
        cell_data(i,8) = {HTAIL(m,h).CLB(i)};
    end
	columninfo.titles={'AOA','CD','CL','CM','CLA','CMA','CNB','CLB'};
	columninfo.formats = {'%2.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g'};
	columninfo.weight =      [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.multipliers = [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.isEditable =  [ 0, 0, 0, 0, 0, 0, 0, 0];
	columninfo.isNumeric =   [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.withCheck = false;
	columninfo.chkLabel = 'Use';
	rowHeight = 14;
	gFont.size=8;
	gFont.name='Helvetica';
	
	data = mltable(fig, tbl, 'CreateTable', columninfo, rowHeight, cell_data, gFont);

% --------------------------------------------------------------------
function stabWB_Callback(hObject, eventdata, handles)
    global NALPHA ALSCHD MACH ALT
    global WB

    m = get(findobj('Tag','machSelection'), 'Value');
    h = get(findobj('Tag','altSelection'), 'Value');
    
    namez=sprintf('Wing-Body Stability Data at M=%.3f, H=%d ft.',MACH(m),ALT(h));
    
	fig = figure('renderer','zbuffer', 'Name', namez,...
                 'MenuBar', 'none');
    pos = get(fig, 'position');
    pos(3) = 440;pos(4)=160;
    set(fig,'position',pos);
    
	tbl = axes('units', 'pixels','position', [20 20 400 120]);
    for i=1:NALPHA
        cell_data(i,1) = {ALSCHD(i)};
        cell_data(i,2) = {WB(m,h).CD(i)};
        cell_data(i,3) = {WB(m,h).CL(i)};
        cell_data(i,4) = {WB(m,h).CM(i)};
        cell_data(i,5) = {WB(m,h).CLA(i)};
        cell_data(i,6) = {WB(m,h).CMA(i)};
        cell_data(i,7) = {WB(m,h).CNB(i)};
        cell_data(i,8) = {WB(m,h).CLB(i)};
    end
	columninfo.titles={'AOA','CD','CL','CM','CLA','CMA','CNB','CLB'};
	columninfo.formats = {'%2.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g'};
	columninfo.weight =      [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.multipliers = [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.isEditable =  [ 0, 0, 0, 0, 0, 0, 0, 0];
	columninfo.isNumeric =   [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.withCheck = false;
	columninfo.chkLabel = 'Use';
	rowHeight = 14;
	gFont.size=8;
	gFont.name='Helvetica';
	
	data = mltable(fig, tbl, 'CreateTable', columninfo, rowHeight, cell_data, gFont);

% --------------------------------------------------------------------
function stabAC_Callback(hObject, eventdata, handles)
    global NALPHA ALSCHD MACH ALT
    global WBVTHT

    m = get(findobj('Tag','machSelection'), 'Value');
    h = get(findobj('Tag','altSelection'), 'Value');
    
    namez=sprintf('Aircraft Stability Data at M=%.3f, H=%d ft.',MACH(m),ALT(h));
    
	fig = figure('renderer','zbuffer', 'Name', namez,...
                 'MenuBar', 'none');
    pos = get(fig, 'position');
    pos(3) = 440;pos(4)=160;
    set(fig,'position',pos);
    
	tbl = axes('units', 'pixels','position', [20 20 400 120]);
    for i=1:NALPHA
        cell_data(i,1) = {ALSCHD(i)};
        cell_data(i,2) = {WBVTHT(m,h).CD(i)};
        cell_data(i,3) = {WBVTHT(m,h).CL(i)};
        cell_data(i,4) = {WBVTHT(m,h).CM(i)};
        cell_data(i,5) = {WBVTHT(m,h).CLA(i)};
        cell_data(i,6) = {WBVTHT(m,h).CMA(i)};
        cell_data(i,7) = {WBVTHT(m,h).CNB(i)};
        cell_data(i,8) = {WBVTHT(m,h).CLB(i)};
    end
	columninfo.titles={'AOA','CD','CL','CM','CLA','CMA','CNB','CLB'};
	columninfo.formats = {'%2.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g','%4.2g'};
	columninfo.weight =      [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.multipliers = [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.isEditable =  [ 0, 0, 0, 0, 0, 0, 0, 0];
	columninfo.isNumeric =   [ 1, 1, 1, 1, 1, 1, 1, 1];
	columninfo.withCheck = false;
	columninfo.chkLabel = 'Use';
	rowHeight = 14;
	gFont.size=8;
	gFont.name='Helvetica';
	
	data = mltable(fig, tbl, 'CreateTable', columninfo, rowHeight, cell_data, gFont);

% --------------------------------------------------------------------
function mnuGroup1_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG1N1_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 1;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N2_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 2;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N3_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N4_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 4;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N5_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 5;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N6_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 6;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N7_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 7;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N8_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 8;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N9_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 9;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG1N10_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 1;
    SELECTION = 10;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuGroup2_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG2N1_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 2;
    SELECTION = 1;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG2N2_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 2;
    SELECTION = 2;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG2N3_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 2;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG2N4_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 2;
    SELECTION = 4;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuGroup3_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG3N1_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 3;
    SELECTION = 1;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG3N2_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 3;
    SELECTION = 2;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG3N3_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 3;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuGroup4_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG4N1_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 4;
    SELECTION = 1;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG4N2_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 4;
    SELECTION = 2;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG4N3_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 4;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG4N4_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 4;
    SELECTION = 4;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG4N5_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 4;
    SELECTION = 5;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG4N6_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 4;
    SELECTION = 6;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuGroup5_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG5N1_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 1;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N2_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 2;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N3_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N4_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 4;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N5_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 5;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N6_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 6;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N7_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 7;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG5N8_Callback(hObject, eventdata, handles)
    global GROUP SELECTION
    GROUP = 5;
    SELECTION = 8;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuGroup6_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG6N3_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG6N3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 6;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuPG6N4_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG6N4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 6;
    SELECTION = 4;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();
% --------------------------------------------------------------------
function mnuGroup7_Callback(hObject, eventdata, handles)
% --------------------------------------------------------------------
function mnuPG7N1_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG7N1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 7;
    SELECTION = 1;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();

% --------------------------------------------------------------------
function mnuPG7N2_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG7N2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 7;
    SELECTION = 2;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();


% --------------------------------------------------------------------
function mnuPG7N3_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG7N3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 7;
    SELECTION = 3;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();


% --------------------------------------------------------------------
function mnuPG7N4_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG7N4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 7;
    SELECTION = 4;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();

% --------------------------------------------------------------------
function mnuPG7N5_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG7N5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 7;
    SELECTION = 5;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();

% --------------------------------------------------------------------
function mnuPG7N6_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPG7N6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    global GROUP SELECTION
    GROUP = 7;
    SELECTION = 6;
    clearChecks();
    set(hObject, 'Checked', 'on');
    plotMenuChange();

% --------------------------------------------------------------------

function clearChecks()
    set(findobj('Tag','mnuPG1N1'),'Checked','off');
    set(findobj('Tag','mnuPG1N2'),'Checked','off');
    set(findobj('Tag','mnuPG1N3'),'Checked','off');
    set(findobj('Tag','mnuPG1N4'),'Checked','off');
    set(findobj('Tag','mnuPG1N5'),'Checked','off');
    set(findobj('Tag','mnuPG1N6'),'Checked','off');
    set(findobj('Tag','mnuPG1N7'),'Checked','off');
    set(findobj('Tag','mnuPG1N8'),'Checked','off');
    set(findobj('Tag','mnuPG1N9'),'Checked','off');
    set(findobj('Tag','mnuPG1N10'),'Checked','off');
    set(findobj('Tag','mnuPG2N1'),'Checked','off');
    set(findobj('Tag','mnuPG2N2'),'Checked','off');
    set(findobj('Tag','mnuPG2N3'),'Checked','off');
    set(findobj('Tag','mnuPG2N4'),'Checked','off');
    set(findobj('Tag','mnuPG3N1'),'Checked','off');
    set(findobj('Tag','mnuPG3N2'),'Checked','off');
    set(findobj('Tag','mnuPG3N3'),'Checked','off');
    set(findobj('Tag','mnuPG4N1'),'Checked','off');
    set(findobj('Tag','mnuPG4N2'),'Checked','off');
    set(findobj('Tag','mnuPG4N3'),'Checked','off');
    set(findobj('Tag','mnuPG4N4'),'Checked','off');
    set(findobj('Tag','mnuPG4N5'),'Checked','off');
    set(findobj('Tag','mnuPG4N6'),'Checked','off');
    set(findobj('Tag','mnuPG5N1'),'Checked','off');
    set(findobj('Tag','mnuPG5N2'),'Checked','off');
    set(findobj('Tag','mnuPG5N3'),'Checked','off');
    set(findobj('Tag','mnuPG5N4'),'Checked','off');
    set(findobj('Tag','mnuPG5N5'),'Checked','off');
    set(findobj('Tag','mnuPG5N6'),'Checked','off');
    set(findobj('Tag','mnuPG5N7'),'Checked','off');
    set(findobj('Tag','mnuPG5N8'),'Checked','off');
    set(findobj('Tag','mnuPG6N3'),'Checked','off');
    set(findobj('Tag','mnuPG6N4'),'Checked','off');
    set(findobj('Tag','mnuPG7N1'),'Checked','off');
    set(findobj('Tag','mnuPG7N2'),'Checked','off');
    set(findobj('Tag','mnuPG7N3'),'Checked','off');
    set(findobj('Tag','mnuPG7N4'),'Checked','off');
    set(findobj('Tag','mnuPG7N5'),'Checked','off');
    set(findobj('Tag','mnuPG7N6'),'Checked','off');
% --------------------------------------------------------------------
function mnuPlots_Callback(hObject, eventdata, handles)
% hObject    handle to mnuPlots (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)




% --- Executes on button press in ssbutton.
function ssbutton_Callback(hObject, eventdata, handles)
% hObject    handle to ssbutton (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global num
num=num+1;
name=sprintf('screenshot-%d.jpg',num);

I = getframe(gcf);
imwrite(I.cdata, name, 'Quality', 80);


% --- Executes on selection change in deltaSelection.
function deltaSelection_Callback(hObject, eventdata, handles)
    plotDatcom()    %Plotting routine


% --- Executes during object creation, after setting all properties.
function deltaSelection_CreateFcn(hObject, eventdata, handles)
% hObject    handle to deltaSelection (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
